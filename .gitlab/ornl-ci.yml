
stages:
  - setup
  - update
  - build ascent
  - test
  - clean

Spack Setup:
  stage: setup
  tags:
    - nobatch
  variables:
    SPACK_WORK_DIR: "/gpfs/wolf/proj-shared/csc449/ci/"
    SPACK_ENV_NAME: "ascent"
  script:
    - test -d $SPACK_WORK_DIR/spack && exit 0
    - git clone -c feature.manyFiles=true -c core.sharedRepository=true https://github.com/spack/spack.git $SPACK_WORK_DIR/spack
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - spack env create $SPACK_ENV_NAME || true
    - spack env activate $SPACK_ENV_NAME
    - spack install --fail-fast exaworks py-pytest


Spack Update:
  stage: update
  tags:
    - nobatch
  variables:
    SPACK_WORK_DIR: "/gpfs/wolf/proj-shared/csc449/ci/"
    SPACK_ENV_NAME: "ascent"
  script:
    - cd $SPACK_WORK_DIR/spack/
    - git checkout HEAD^ .
    - git pull --ff
    - chmod -fR 02770 . || true

Spack Build ascent:
  stage: build ascent
  variables:
    SPACK_WORK_DIR: "/gpfs/wolf/proj-shared/csc449/ci/"
    SPACK_ENV_NAME: "ascent"
  tags:
    - nobatch
  script:
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - spack env activate $SPACK_ENV_NAME
    - spack uninstall -y exaworks  || true
    - spack uninstall -y py-pytest || true
    - spack install --fresh exaworks py-pytest


Spack Test:
  variables:
    SCHEDULER_PARAMETERS: "-P CSC449 -nnodes 1 -W 30"
    SPACK_WORK_DIR: "/gpfs/wolf/proj-shared/csc449/ci/"
    SPACK_ENV_NAME: "ascent"
  stage: test
  before_script:
    - whoami
  parallel:
    matrix:
      - HOST : ["ascent"]
        SPACK_ENV_NAME : ["ascent"]
  tags:
    - batch
    - $HOST
  script:
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - spack env activate $SPACK_ENV_NAME
    - spack load exaworks py-pytest
    - export run_id=$CI_PIPELINE_ID
    - export branch=$CI_COMMIT_BRANCH
    - export url="https://sdk.testing.exaworks.org/result"
    - export test="Spack"
    - export location="ornl-$HOST"
    - export contact="andre@merzky.net"
    - python3 ci/tests/test.py -s
    - >
        for TEST in flux parsl rp swift-t parsl-flux; do
        python3 ci/tests/test.py -n $TEST -c
        "bash ci/tests/${TEST}/test.sh";
        done;
    - python3 ci/tests/test.py -e
  after_script:
    - whoami
    
