stages:
  - setup
  - compile
  - update
  - build
  - test

default:
  before_script:
    - newgrp exaworks
  after_script:
    - cd $SPACK_WORK_DIR/spack
    - chmod -fR 02770 .

spack-setup:
  stage: setup
  tags:
    - quartz
    - shell
  script:
    - mkdir -p $SPACK_WORK_DIR
    - test -d $SPACK_WORK_DIR/spack && exit 0
    - git clone -c feature.manyFiles=true -c core.sharedRepository=true https://github.com/spack/spack.git $SPACK_WORK_DIR/spack

env-setup:
  stage: compile
  needs:
    - job: spack-setup
  parallel:
    matrix:
      - HOST: [ "quartz" ]
        SPACK_ENV_NAME: [ "rhel7-broadwell" ]
        COMPILER: [ "gcc@8.1.0" ]
        TARGET_ARCH_OPT: [ "target=x86_64" ]
      - HOST: [ "lassen" ]
        SPACK_ENV_NAME: [ "rhel7-ppc64le" ]
        COMPILER: [ "gcc@9.4.0" ]
        TARGET_ARCH_OPT: [ "target=ppc64le" ]
      - HOST: [ "ruby" ]
        SPACK_ENV_NAME: [ "rhel7-cascadelake" ]
        COMPILER: [ "gcc@8.2.0" ]
        TARGET_ARCH_OPT: [ "" ]
  tags:
    - $HOST
    - shell
  script:
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - test "$(spack env list | grep $SPACK_ENV_NAME)" && exit 0
    - spack env create $SPACK_ENV_NAME
    - spack env activate $SPACK_ENV_NAME
    - spack -e . config add concretizer:unify:true
    - spack -e . config add concretizer:reuse:false
    - spack compiler find
    - spack install --fail-fast $COMPILER%gcc@4.9.3 $TARGET_ARCH_OPT
    - spack compiler add $(spack location -i $COMPILER)

spack-update:
  stage: update
  tags:
    - quartz
    - shell
  script:
    - cd $SPACK_WORK_DIR/spack/
    - git checkout HEAD^ .
    - git reset --hard HEAD
    - git pull --ff

spack-build:
  stage: build
  needs:
    - job: spack-update
  parallel:
    matrix:
      - HOST: [ "quartz" ]
        SPACK_ENV_NAME: [ "rhel7-broadwell" ]
        COMPILER: [ "gcc@8.1.0" ]
      - HOST: [ "lassen" ]
        SPACK_ENV_NAME: [ "rhel7-ppc64le" ]
        COMPILER: [ "gcc@9.4.0" ]
      - HOST: [ "ruby" ]
        SPACK_ENV_NAME: [ "rhel7-cascadelake" ]
        COMPILER: [ "gcc@8.2.0" ]
  tags:
    - $HOST
    - shell
  script:
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - spack env activate $SPACK_ENV_NAME
    - spack uninstall -y exaworks%$COMPILER py-pytest%$COMPILER || true
    - spack add exaworks%$COMPILER py-pytest%$COMPILER
    - spack concretize -f
    - spack install

sdk-test:
  stage: test
  needs:
    - job: spack-build
  variables:
    LLNL_SLURM_SCHEDULER_PARAMETERS: "--nodes=1 -t 30"
  before_script:
    - whoami
  parallel:
    matrix:
      - HOST: [ "quartz" ]
        SPACK_ENV_NAME: [ "rhel7-broadwell" ]
      - HOST: [ "lassen" ]
        SPACK_ENV_NAME: [ "rhel7-ppc64le" ]
      - HOST: [ "ruby" ]
        SPACK_ENV_NAME: [ "rhel7-cascadelake" ]
  tags:
    - $HOST
    - batch
  script:
    - . $SPACK_WORK_DIR/spack/share/spack/setup-env.sh
    - spack env activate $SPACK_ENV_NAME
    - spack load exaworks py-pytest
    - export RADICAL_PILOT_DBURL=${MONGODB_CONNECTION_STRING}?tlsAllowInvalidCertificates=true
    - export run_id=$RANDOM
    - export branch=$CI_COMMIT_BRANCH
    - export url=$TESTING_HOST
    - export test="Spack"
    - export location="llnl-$HOST"
    - export contact="morton30@llnl.gov"
    - export imnumber="LLNL-MI-834241"
    - python3 ci/tests/test.py -s
    - >
        for TEST in flux parsl rp swift-t parsl-flux; do
            python3 ci/tests/test.py -n $TEST -c
            "bash ci/tests/${TEST}/test.sh";
        done;
    - python3 ci/tests/test.py -e
  after_script:
    - whoami

