variables:
  CONDA_WORK_DIR: ${SDK_WORK_DIR_ALPINE}/conda
  CONDA_REQUIREMENTS: .gitlab/conda-requirements.yml


stages:
  - setup
  - build
  - test
  - cleanup


### MACHINES
.on_ascent:
  variables:
    SITE: "ascent"
    VENV_ENV_NAME: "ascent-env"
    PIP_WORK_DIR: ${SDK_WORK_DIR_OPEN}/pip

# .on_summit:
#   variables:
#     SITE: "summit"
#     VENV_ENV_NAME: "summit-env"
#     PIP_WORK_DIR: ${SDK_WORK_DIR_ALPINE}/pip


### SCRIPTS
.final_steps:
  script: &finalize
    - chgrp -fR csc449 ${PIP_WORK_DIR} || true
    - chmod -fR 02770 ${CONDA_WORK_DIR}    || true

.job_tags:
  tags:
    - $SITE
    - $RUNNER_TYPE

.conda_setup:
  stage: setup
  script:
    - mkdir -p ${CONDA_WORK_DIR}
    - test -d ${CONDA_WORK_DIR}/miniconda3-${SITE} && exit 0
    - wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-${CONDA_ARCH}.sh -O ${CONDA_WORK_DIR}/miniconda-${SITE}.sh
    - chmod +x ${CONDA_WORK_DIR}/miniconda-${SITE}.sh
    - ${CONDA_WORK_DIR}/miniconda-${SITE}.sh -b -p ${CONDA_WORK_DIR}/miniconda3-${SITE}
    - *finalize

.conda_env_setup:
  stage: setup
  script:
    - test -d ${CONDA_WORK_DIR}/${CONDA_ENV_NAME} && exit 0
    - module add python/3.8.10
    - source ${CONDA_WORK_DIR}/miniconda3-${SITE}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda create --prefix ${CONDA_WORK_DIR}/${CONDA_ENV_NAME} -y
    - *finalize

.conda_build:
  stage: build
  script:
    - source ${CONDA_WORK_DIR}/miniconda3-${SITE}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda activate ${CONDA_WORK_DIR}/${CONDA_ENV_NAME}
    - conda env update --file ${CONDA_REQUIREMENTS}
    - *finalize

.conda_test:
  stage: test
  variables:
    MAINTAINER: "arambula2@llnl.gov"
    TESTS_GROUP: "conda"
    SITE_ID: "ornl-$SITE"
  script:
    - source ${CONDA_WORK_DIR}/miniconda3-${SITE}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda activate ${CONDA_WORK_DIR}/${CONDA_ENV_NAME}
    - python3 ci/tests/test.py -s
    - for TEST in flux parsl rp swift-t parsl-flux rp-flux; do
        python3 ci/tests/test.py -n $TEST -c "bash ci/tests/${TEST}/test.sh" --stdout;
      done
    - python3 ci/tests/test.py -e
    - *finalize

### JOBS

# ASCENT
conda_setup_ascent:
  variables:
    RUNNER_TYPE: "nobatch"
  extends: [ .on_ascent, .job_tags, .conda_setup ]

conda_env_setup_ascent:
  variables:
    RUNNER_TYPE: "nobatch"
  needs: [ conda_setup_ascent ]
  extends: [ .on_ascent, .job_tags, .conda_env_setup ]

conda_build_ascent:
  variables:
    RUNNER_TYPE: "nobatch"
  needs: [ conda_env_setup_ascent ]
  extends: [ .on_ascent, .job_tags, .conda_build ]

conda_test_ascent:
  variables:
    RUNNER_TYPE: "batch"
    SCHEDULER_PARAMETERS: "-P CSC449 -nnodes 1 -W 45"
  needs: [ conda_build_ascent ]
  extends: [ .on_ascent, .job_tags, .conda_test ]


# ALWAYS
conda_cleanup:
  stage: cleanup
  when: always
  variables:
    RUNNER_TYPE: "nobatch"
  extends: [ .on_ascent, .job_tags ]
  script:
   - *finalize

