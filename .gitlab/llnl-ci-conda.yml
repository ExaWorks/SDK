variables:
  CONDA_WORK_DIR: ${SDK_WORK_DIR}/conda
  CONDA_REQUIREMENTS: .gitlab/conda-requirements.yml
  RADICAL_PILOT_DBURL: ${MONGODB_CONNECTION_STRING}?tlsAllowInvalidCertificates=true

stages:
  - setup
  - build
  - test

.on_quartz:
  variables:
    HOST: "quartz"
    CONDA_ENV_NAME: "quartz-env"
    CONDA_ARCH: "x86_64"

.on_ruby:
  variables:
    HOST: "ruby"
    CONDA_ENV_NAME: "ruby-env"
    CONDA_ARCH: "x86_64"

.job_tags:
  tags:
    - $HOST
    - $RUNNER_TYPE

.final_steps:
  script: &finalize
    - chgrp -fR exaworks ${CONDA_WORK_DIR} || true
    - chmod -fR 02770 ${CONDA_WORK_DIR}    || true

.conda_setup:
  stage: setup
  script:
    - mkdir -p ${CONDA_WORK_DIR}
    - test -d ${CONDA_WORK_DIR}/miniconda3-${HOST} && exit 0
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-${CONDA_ARCH}.sh -O ${CONDA_WORK_DIR}/miniconda-${HOST}.sh
    - chmod +x ${CONDA_WORK_DIR}/miniconda-${HOST}.sh
    - ${CONDA_WORK_DIR}/miniconda-${HOST}.sh -b -p ${CONDA_WORK_DIR}/miniconda3-${HOST}
    - *finalize

.conda_env_setup:
  stage: setup
  script:
    - test -d ${CONDA_WORK_DIR}/${CONDA_ENV_NAME} && exit 0
    - source ${CONDA_WORK_DIR}/miniconda3-${HOST}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda update -y -n base conda
    - conda create --prefix ${CONDA_WORK_DIR}/${CONDA_ENV_NAME} -y
    - *finalize

.conda_build:
  stage: build
  script:
    - source ${CONDA_WORK_DIR}/miniconda3-${HOST}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda activate ${CONDA_WORK_DIR}/${CONDA_ENV_NAME}
    - conda env update --file ${CONDA_REQUIREMENTS}
    - *finalize

.conda_tests:
  stage: test
  script:
    - source ${CONDA_WORK_DIR}/miniconda3-${HOST}/etc/profile.d/conda.sh
    - eval "$(conda shell.posix hook)"
    - conda activate ${CONDA_WORK_DIR}/${CONDA_ENV_NAME}
    - export run_id=${CI_PIPELINE_ID}
    - export branch=${CI_COMMIT_BRANCH}
    - export url=${TESTING_HOST}
    - export test="Conda"
    - export location="llnl-$HOST"
    - export contact="arambula2@llnl.gov"
    - export imnumber="LLNL-MI-834241"
    - python3 ci/tests/test.py -s
    - for TEST in flux parsl rp swift-t parsl-flux rp-flux; do
        python3 ci/tests/test.py -n $TEST -c "bash ci/tests/${TEST}/test.sh";
      done
    - python3 ci/tests/test.py -e
    - *finalize




conda_setup_quartz:
  variables:
    RUNNER_TYPE: "shell"
  extends: [.on_quartz, .job_tags, .conda_setup]

conda_env_setup_quartz:
  variables:
    RUNNER_TYPE: "shell"
  needs: [ "conda_setup_quartz" ]
  extends: [.on_quartz, .job_tags, .conda_env_setup]

conda_build_quartz:
  variables:
    RUNNER_TYPE: "shell"
  needs: [ "conda_env_setup_quartz" ]
  extends: [.on_quartz, .job_tags, .conda_build]

conda_tests_quartz:
  variables:
    RUNNER_TYPE: "batch"
    LLNL_SLURM_SCHEDULER_PARAMETERS: "--nodes=1 -t 60"
  needs: [ "conda_build_quartz" ]
  extends: [.on_quartz, .job_tags, .conda_tests]




conda_setup_ruby:
  variables:
    RUNNER_TYPE: "shell"
  extends: [.on_ruby, .job_tags, .conda_setup]

conda_env_setup_ruby:
  variables:
    RUNNER_TYPE: "shell"
  needs: [ "conda_setup_ruby" ]
  extends: [.on_ruby, .job_tags, .conda_env_setup]

conda_build_ruby:
  variables:
    RUNNER_TYPE: "shell"
  needs: [ "conda_env_setup_ruby" ]
  extends: [.on_ruby, .job_tags, .conda_build]

conda_tests_ruby:
  variables:
    RUNNER_TYPE: "batch"
    LLNL_SLURM_SCHEDULER_PARAMETERS: "--nodes=1 -t 60"
  needs: [ "conda_build_ruby" ]
  extends: [.on_ruby, .job_tags, .conda_tests]
