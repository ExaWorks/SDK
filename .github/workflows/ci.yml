name: CI Test
on:
  pull_request:
  push: { branches: [master] }

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dockerbase: ["centos7", "centos8", "ubuntu2004"]
        packagemanager: ["pip", "conda"]
        exclude:
        - dockerbase: "centos8"
          packagemanager: "conda"
      fail-fast: false
    env:
      DOCKER_TAG: "${{ matrix.dockerbase }}_${{ matrix.packagemanager }}"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Build docker images (base - ${{ env.DOCKER_TAG }})
      run: |
        docker build \
          -t exaworks/sdk-base:${{ env.DOCKER_TAG }} \
          --cache-from exaworks/sdk-base:${{ env.DOCKER_TAG }} \
          -f docker/base/${{ matrix.dockerbase }}/Dockerfile \
          --build-arg PACKAGE_MANAGER=${{ matrix.packagemanager }} \
          docker/base/
        docker build \
          -t rp:${{ env.DOCKER_TAG }} \
          --build-arg BASE_IMAGE=exaworks/sdk-base:${{ env.DOCKER_TAG }} \
          docker/rp
        docker build \
          -t rp_parsl:${{ env.DOCKER_TAG }} \
          --build-arg BASE_IMAGE=rp:${{ env.DOCKER_TAG }} \
          docker/Parsl
        docker build \
          -t rp_parsl_swift:${{ env.DOCKER_TAG }} \
          --build-arg BASE_IMAGE=rp_parsl:${{ env.DOCKER_TAG }} \
          docker/swift-t
        docker build \
          -t rp_parsl_swift_flux:${{ env.DOCKER_TAG }} \
          --build-arg BASE_IMAGE=rp_parsl_swift:${{ env.DOCKER_TAG }} \
          docker/flux
        docker build \
          -t exaworks_sdk_integration:${{ env.DOCKER_TAG }} \
          --build-arg BASE_IMAGE=rp_parsl_swift_flux:${{ env.DOCKER_TAG }} \
          docker/integration

    - name: Run tests (base - ${{ env.DOCKER_TAG }})
      run: |
        docker run rp:${{ env.DOCKER_TAG }}
        ret_rp=$?
        echo "rp   : $ret_rp"
        docker run rp_parsl:${{ env.DOCKER_TAG }}
        ret_parsl=$?
        echo "parsl: $ret_parsl"
        docker run rp_parsl_swift:${{ env.DOCKER_TAG }}
        ret_swift=$?
        echo "swift: $ret_swift"
        docker run rp_parsl_swift_flux:${{ env.DOCKER_TAG }}
        ret_flux=$?
        echo "flux : $ret_flux"
        docker run exaworks_sdk_integration:${{ env.DOCKER_TAG }}
        ret_integration=$?
        echo "integration: $ret_integration"
        echo "exit : $(expr $ret_rp + $ret_parsl + $ret_swift + $ret_flux + $ret_integration)"
        exit $(expr $ret_rp + $ret_parsl + $ret_swift + $ret_flux + $ret_integration)

  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin master
    - uses: exaworks/pr-validator@master
